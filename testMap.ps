(map.ps) run

/Times-Roman findfont        % Find the font 
14 scalefont                 % Make it a bigger font
setfont                      % Now load the font as the current font

/print-top {                
   5 string                 % Create a string of length 5 on the operand stack
   cvs                       % Convert the top value of the stack to the string
   show
} def                        

/print-stack {                
 1 dict begin
   count 0 ne {
     /x exch def
     print-stack
     x
     5 string              % Create a string of length 5 on the operand stack
     cvs                   % Convert the top value of the stack to the string
     show
     ( ) show
   } 
   if
 end
} def                        

% move coordinates
100 400 translate
0 0 moveto

% test code
(Executing "5 2 4 7 1 3 {1 add} map " got ) show
5 2 4 7 1 3 {1 add} map print-stack
0 -20 translate
0 0 moveto
count print-top
( things left on the stack.) show


0 -20 translate
0 0 moveto
(Executing "1 {1 add} map " got ) show
1 {1 add} map print-stack
0 -20 translate
0 0 moveto
count print-top
( things left on the stack.) show


0 -20 translate
0 0 moveto
(Executing " {1 add} map " got ) show
{1 add} map print-stack
0 -20 translate
0 0 moveto
count print-top
( things left on the stack.) show


0 -20 translate
0 0 moveto
(Executing " 3 1 3 {2 mul} map " got ) show
3 1 3 {2 mul} map print-stack
0 -20 translate
0 0 moveto
count print-top
( things left on the stack.) show


showpage
